var FS = require('fs');
var URL = require('url');
var PATH = require('path');
var RE_URL = /^\w+:\/\/.+/;

function compileFunction(module) {
	return `function (module, exports, __dirname, require) {
		${module}
	}`;
}

function compileJSON(json) {
    return `function (module, exports) { module.exports = ${json}; }`;
}

function createBundle(pathList, opts) {
	var root = opts.root || process.cwd();
    var entry = opts.entry ? `require('${opts.entry}');\n` : '';
    var mapping = opts.map ? Object.keys(opts.map).map(function (mod) {
        return `require.map('${mod}', '${opts.map[mod]}');`
    }).join('\n') : '';
	var compiled = pathList.map(function normalizer (path) {
		if (path.startsWith('./') || path.startsWith('../') || path.startsWith('/')) {
			// console.log(path, PATH.normalize(path));
			return PATH.normalize(path).replace(/\\/g, '/');
		} else if (path.matches(RE_URL)) {
			throw new Error('Only relative urls implemented till now!');
		} else {
			throw new Error(`Path: ${path} | is not identified as a valid path!`);
		}
	}).map(function compile (path) {


		var module = FS.readFileSync(PATH.join(root, path)); 
		// console.log('m', PATH.join(root, path), module, compileFunction(module));
		return {
			path: `./${path}`,
			module: module,
			compiled: path.endsWith('.json') ? compileJSON(module) : compileFunction(module)
		};
	});
	return (
`/*! bundle compiled on ${Date()} */
(function () {
	var require = window.require = (function () {
		var ROOT = '/';
		var REQUIRE_CACHE = Object.create(null);
		var REQUIRE_MAP = Object.create(null);
        var REQUIRE_SOURCE = Object.create(null);
		var hasOwn = Object.prototype.hasOwnProperty;
		var RE_URL = /^\\w+:\\/\\/.+/;
		function require(url) {
			var abs = _GenerateFQN_(url, this.__dirname);
            var dir = abs.split(ROOT).slice(0, -1).join(ROOT) + ROOT;
			if (abs in REQUIRE_CACHE) {
				return REQUIRE_CACHE[abs].exports;
			}
			var MODULE_CODE = REQUIRE_SOURCE[abs];
			var MODULE_EXECUTABLE = REQUIRE_SOURCE[abs];
			var MODULE__module = {
				__dirname: dir,
				exports: {}
			};
			REQUIRE_CACHE[abs] = MODULE__module;
			MODULE_EXECUTABLE.call(MODULE__module.exports, MODULE__module, MODULE__module.exports, dir, 
require.bind(MODULE__module));
			return MODULE__module.exports;
		}
		function _GenerateFQN_(url, __dirname) {
		    if (url.match(RE_URL)) {
                return url;
            } else if (url.startsWith(ROOT)) {
                return jn(url);
            } else if (url.startsWith('./') || url.startsWith('../')) {
                return jn(__dirname, url);
            } else return _GenerateFQN_(REQUIRE_MAP[url], ROOT);
        }
        function jn() {
            return '.' + (new URL([].join.call(arguments, ROOT).replace(/\\/+/g, ROOT), 'http://a.b/')).pathname;
        }
        var globalRequire = require.bind({__dirname: ROOT});
		globalRequire.register = function (module, compiled) {
			REQUIRE_SOURCE[module] = compiled;
		};
        globalRequire.map = function (a, b) {
            REQUIRE_MAP[a] = b;
        };
		return globalRequire;
	})();
	${compiled.map(function (bin) {
		return `require.register("${bin.path}", ${bin.compiled});`;
	}).join('\n\t')}
    ${mapping}
	${entry}
})();
`);
}

module.exports = createBundle;
